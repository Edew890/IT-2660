/*
 * IT-2660 - Lab 1
 * Student Name: Andrew Euse
 */

public class Main {
  public static void main(String[] args) { 
int[] nums = {5, 9, 3, 12, 7, 3, 11, 5};
  System.out.println("Array in Order:");
        int i = 0;
        while (i < nums.length) {
            System.out.print(nums[i] + " ");
            i++;
        }
    System.out.println();
    System.out.println("Array in Reverse:");
      for (int j = nums.length - 1; j >= 0; j--) {
           System.out.print(nums[j] + " ");
        }
System.out.println();

 System.out.println("First value: " + nums[0]);
        System.out.println("Last value: " + nums[nums.length - 1]);

    Lab1 lab = new Lab1();
    System.out.println(lab.increment(1));
    System.out.println(lab.max(1,6));
    System.out.println(lab.min(1,6));
    System.out.println(lab.sum(nums));
    System.out.println(lab.average(nums));
    System.out.println(lab.max(nums));
    System.out.println(lab.min(nums));

  }
}     

// Add all of the methods here
class Lab1 {
  public int increment(int num) {
    return ++num;
  }

 public int max(int a, int b) {
        if (a > b) return a;
        return b;
    }

    public int min(int a, int b) {
        if (a < b) return a;
        return b;
    }

    public int sum(int[] nums) {
        int total = 0;
        for (int num : nums) {
            total += num;
        }
        return total;
    }

    public double average(int[] nums) {
        if (nums.length == 0) return 0;
        int total = 0;
        for (int num : nums) {
            total += num;
        }
        return (double) total / nums.length;
    }

    public int max(int[] nums) {
        int maxValue = nums[0];
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] > maxValue) {
                maxValue = nums[i];
            }
        }
        return maxValue;
    }

    public int min(int[] nums) {
        int minValue = nums[0];
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] < minValue) {
                minValue = nums[i];
            }
        }
        return minValue;
    }
}
